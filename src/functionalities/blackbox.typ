== Blackbox

The blackbox functionality is used to incorporate blocks implemented manually or generated by external tools.
For example, a user may want to explicitly manage some particular registers' layouts.
In such a case, a register-centric tool might be used, and the generated block can be incorporated into the wrapping functionality-centric description using the blackbox functionality.

The blackbox functionality has following properties:

*`access`*` string (`_`"Read Write"`_`) {declarative}`
#pad(left: 1em)[
The `access` property declares the valid access permissions to the blackbox for the requester.
Valid values of the access property are: _`"Read Write"`_, _`"Read Only"`_, and _`"Write Only"`_.
]

*`size`*` integer (obligatory) [definitive]`
#pad(left: 1em)[
The size property defines size of the blackbox in the number of words with width equal to the width property value of the block in which blackbox is defined.
]

The code generated for the requester must provide means for single read/write and block read/write transactions.
Whether access means for cyclic or vectored (scatter-gather) transactions are automatically generated is up to the compiler.
If blackbox is read-only or write-only, then an unsupported write or read access code is recommended not to be generated.
The code generated for the provider must provide a means to connect the blackbox to the remaining part of the bus generated by an FBDL compiler.

.bp
.NH
.XN Grouping
.LP
Grouping is a feature of the FBDL used to inform a compiler that particular functionalities might be accessed together and theirs register location must meet additional constraints.
This is achieved using the \f[C]groups\fR property.
The following functionalities can be grouped: \fCconfig\fR,  \fCmask\fR,  \fCstatic\fR,  \fCstatus\fR.
Following snippet presents three grouped configs.
.QP
\fCMain \f[CB]bus\fC
.br
	\f[CB]type\fC cfg_t; \f[CB]width\fC = 8; \f[CB]groups\fC = [\f[CI]"group"\fC]
.br
	A cfg_t
.br
	B cfg_t
.br
	C cfg_t
.LP
Any FBDL compliant compiler must place all three configs (\fCA\fR, \fCB\fR, \fCC\fR) in the same register.
.
.NH 2
.XN "Single register groups"
.LP
The single register groups are groups of elements that fit single register.
The overall width of all functionalities is not greater than the single register width.
In such case all functionalities must be placed in the same register.
Following listing presents an example bus description with three groups.
.QP
\fCMain \f[CB]bus\fC
.br
	C0 \f[CB]config\fC; \f[CB]width\fC = 16; \f[CB]groups\fC = ["\f[CI]read_write_group\fC"]
.br
	M0 \f[CB]mask\fC;   \f[CB]width\fC = 15; \f[CB]groups\fC = ["\f[CI]read_write_group\fC"]
.br

	C1  \f[CB]config\fC; \f[CB]width\fC = 16; \f[CB]groups\fC = ["\f[CI]mixed_group\fC"]
.br
	S11 \f[CB]static\fC; \f[CB]width\fC = 8;  \f[CB]groups\fC = ["\f[CI]mixed_group\fC"]
.br
	S12 \f[CB]status\fC; \f[CB]width\fC = 8;  \f[CB]groups\fC = ["\f[CI]mixed_group\fC"]
.br

	S21 \f[CB]status\fC; \f[CB]width\fC = 4; \f[CB]groups\fC = ["\f[CI]read_only_group\fC"]
.br
	S22 \f[CB]status\fC; \f[CB]width\fC = 7; \f[CB]groups\fC = ["\f[CI]read_only_group\fC"]
.br
.LP
All functionalities of the \fCread_write_group\fR can be both read and written.
The code generated by a compiler for the requester must provide methods for reading/writing the whole group as well as for read/writing particular functionalities of the group.
.LP
The \fCmixed_group\fR contains functionality that can be read and written (\fCC1\fR), as well as functionalities that can be only read (\fCS11\fR, \fCS12\fR).
The code generated by a compiler for the requester must provide method for reading all readable functionalities and method for writing all writable functionalities.
It is valid even if the group has single readable or single writable functionality.
The compiler must also generate methods for reading/writing particular functionalities of the group.
In case of \fCmixed_group\fR this will results with two methods doing exactly the same (writing the \fCC1\fR config).
However, it is up to the user to decide which of the methods should be used.
If it makes sense, it is perfectly valid to use both of them in different contexts.
.LP
All functionalities of the \fCread_only_group\fR are read only.
In this case the compiler must generate method only for reading the group.
It must also generate methods for reading particular functionalities.
.
.NH 2
.XN "Virtual groups"
.LP
Virtual groups are groups that name starts with the underscore ('_'), for example "\f[CI]_group\fR".
Virtual groups are used to group functionalities without generating the group interface for the requester code.
